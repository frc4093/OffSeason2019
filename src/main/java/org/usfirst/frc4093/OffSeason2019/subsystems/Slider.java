// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4093.OffSeason2019.subsystems;


import org.usfirst.frc4093.OffSeason2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.DigitalInput;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Slider extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_TalonSRX talonSRX1;
    private DigitalInput diskpositionswitch;
    private DigitalInput ballpositionswitch;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private boolean armSafety = true;
    public Slider() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        talonSRX1 = new WPI_TalonSRX(5);
        
        
        
        diskpositionswitch = new DigitalInput(8);
        addChild("diskpositionswitch",diskpositionswitch);
        
        
        ballpositionswitch = new DigitalInput(9);
        addChild("ballpositionswitch",ballpositionswitch);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void moveForward(){
        if (getLimit() != 2) {
            talonSRX1.set(1);
        }else{
            stop();
        }
        
    }
    public void moveBackward(){
        if (getLimit() != 1) {
            talonSRX1.set(-1);
        }else{
            stop();
        }
         
    }
    public void stop(){
        talonSRX1.set(0);
    }
    public int getLimit(){ //return limit with int number
        if (!diskpositionswitch.get()){
            return 1;
        }
        if (!ballpositionswitch.get()){
            return 2;
        }
        return 0;
    }
    @Override
    public void periodic() {
        // Put code here to be run every loop
        //System.out.println("LIMIT:" + getLimit());
    }

    // BEGIN AUTOGENERATED CODE, SO\URCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

